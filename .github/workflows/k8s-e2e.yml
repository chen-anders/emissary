name: k8s-e2e

"on":
  workflow_dispatch:
  workflow_call:

jobs:
  acceptance_tests:
    runs-on: ubuntu-latest
    env:
      # See docker/base-python.docker.gen
      BASE_PYTHON_REPO: ${{ secrets.BASE_PYTHON_REPO }}
      # See pkg/kubeapply/resource_kubeapply.go
      DEV_USE_IMAGEPULLSECRET: ${{ secrets.DEV_USE_IMAGEPULLSECRET }}
      DOCKER_BUILD_USERNAME: ${{ secrets.GH_DOCKER_BUILD_USERNAME }}
      DOCKER_BUILD_PASSWORD: ${{ secrets.GH_DOCKER_BUILD_TOKEN }}
      VERSION: v0.0.0-build-images
      CHART_VERSION: v0.0.0-build-images
    strategy:
      fail-fast: false
      matrix:
        k8s:
          [
            { k3s: 1.26.9+k3s1, kubectl: 1.26.9 },
            { k3s: 1.27.6+k3s1, kubectl: 1.27.6 },
            { k3s: 1.28.2+k3s1, kubectl: 1.28.2 },
          ]
        test:
          - integration-tests
          - kat-envoy3-tests-1-of-5
          - kat-envoy3-tests-2-of-5
          - kat-envoy3-tests-3-of-5
          - kat-envoy3-tests-4-of-5
          - kat-envoy3-tests-5-of-5
    name: ${{matrix.k8s.kubectl}}-${{ matrix.test }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install Deps
        uses: ./.github/actions/setup-deps
      - name: Create integration test cluster
        env:
          K3S_VERSION: ${{matrix.k8s.k3s}}
          KUBECTL_VERSION: ${{matrix.k8s.kubectl}}
        run: |
          sudo sysctl -w fs.file-max=1600000
          sudo sysctl -w fs.inotify.max_user_instances=4096

          make ci/setup-k3d
      - name: Load Docker Images into k3d cluster # has to be done after k3d is installed
        uses: ./.github/actions/load-docker-images-from-artifacts
      - name: Setup integration test environment
        run: |
          export DEV_KUBE_NO_PVC=yes
          export KAT_REQ_LIMIT=900
          export DEV_KUBECONFIG=~/.kube/config
          export DEV_REGISTRY=${{ secrets.DEV_REGISTRY }}
          export SKIP_PUSH="true"
          make python-integration-test-environment
      - name: Run ${{ matrix.test }}
        run: |
          export DEV_KUBE_NO_PVC=yes
          export KAT_REQ_LIMIT=900
          export DEV_KUBECONFIG=~/.kube/config
          export DEV_REGISTRY=${{ secrets.DEV_REGISTRY }}
          make pytest-${{ matrix.test }}
      - uses: ./.github/actions/after-job
        if: always()
        with:
          jobname: check-pytest-${{ matrix.test }}
